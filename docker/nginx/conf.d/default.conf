# docker/nginx/conf.d/default.conf
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Default server root (less critical when using location-specific roots/aliases)
    # Can point to either frontend build or backend public, or a shared location if applicable.
    root /var/www/frontend/dist;
    index index.html index.htm;

    # Log files (ensure the logs directory exists and is writable by nginx)
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log error;

    charset utf-8;

    # Handle backend API requests
    location /api/ {
        alias /var/www/backend/public/;
        # If request doesn't match a file, pass to the named backend location
        try_files $uri @symfony_api;
    }

    # Named location to handle passing requests to Symfony API front controller
    location @symfony_api {
        fastcgi_pass backend:9000;
        include fastcgi_params;
        # Set SCRIPT_FILENAME to the correct index.php based on the alias path
        fastcgi_param SCRIPT_FILENAME /var/www/backend/public/index.php;
        fastcgi_param DOCUMENT_ROOT /var/www/backend/public;
        # You might need PATH_INFO if your Symfony routes depend on it, but often not needed for API-only
        # fastcgi_param PATH_INFO $fastcgi_path_info; # Requires fastcgi_split_path_info if used
    }

    # Handle frontend requests by proxying to Vite Dev Server
    location / {
        # Proxy requests to the frontend service running Vite (port 5173)
        proxy_pass http://frontend:5173;

        # Necessary headers for Vite HMR (WebSocket support)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Forward client IP etc. (optional but good practice)
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Deny direct access to any .php files (Security measure)
    # Requests to the API should go through the front controller via @symfony_api
    location ~ \.php$ {
        return 404;
    }

    # Optional: Deny access to hidden files globally
    location ~ /\. {
        deny all;
    }
} 