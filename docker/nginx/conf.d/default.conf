# docker/nginx/conf.d/default.conf
server {
    listen 80;
    server_name localhost; #tu_dominio_o_IP publica
    server_tokens off;

    # Redirige todas las peticiones HTTP a HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;#tu_dominio_o_IP publica
    server_tokens off;
    # Configuración SSL con las rutas a las claves y los certificados
    ssl_certificate /etc/nginx/certs/selfsigned.crt;
    ssl_certificate_key /etc/nginx/certs/selfsigned.key;
    # Opciones adicionales de seguridad
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Serve uploaded static files
    location /uploads/ {
        alias /var/www/backend/public/uploads/; # Path inside the Nginx container (points to backend's public/uploads via volume mount)
        try_files $uri $uri/ =404;               # Serve the file if it exists, otherwise 404
        expires 1M;                              # Optional: Add caching headers
        access_log off;                          # Optional: Turn off access logging for these files
        add_header Cache-Control "public";       # Optional
    }

    #primer servicio
    location / {
        proxy_pass http://frontend:5173; # Redirige las solicitudes al servicio en su puerto
        #persistencia de la información original del cliente
        #pasa el nombre del host o dominio del cliente
        proxy_set_header Host $host;
        #pasa la ip original del cliente
        proxy_set_header X-Real-IP $remote_addr;
        #pasa las ip del cliente y las de los proxies intermedios si existen
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #envia información sobre si la solicitud es http o https
        proxy_set_header X-Forwarded-Proto $scheme;
        #soporte para websockets y SSE para mantener la conexión abierta
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        #soporte para tiempos de conexión y respuesta lentos
        proxy_connect_timeout 60s; #tiempo máximo de conexión
        proxy_send_timeout 60s; #tiempo máximo para enviar la solicitud
        proxy_read_timeout 60s; #tiempo máximo para recibir la respuesta
    }

    location ^~ /api/ {
        # Try to serve static files from the backend's public directory first (if any under /api/)
        root /var/www/backend/public/; # Adjust if your backend volume mount differs
        try_files $uri @symfony_api; # If no static file, pass to Symfony
    }

    # Named location to handle passing requests to Symfony API front controller via FastCGI
    location @symfony_api {
        fastcgi_pass backend:9000; # Connect to the backend PHP-FPM service
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/backend/public/index.php;
        fastcgi_param DOCUMENT_ROOT /var/www/backend/public;
        # Prevent Nginx caching responses from PHP-FPM (optional, good for dev)
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }


    location /phpmyadmin/ {
        proxy_pass http://phpmyadmin:80/; # Redirige las solicitudes al servicio en su puerto
        #persistencia de la información original del cliente
        #pasa el nombre del host o dominio del cliente
        proxy_set_header Host $host;
        #pasa la ip original del cliente
        proxy_set_header X-Real-IP $remote_addr;
        #pasa las ip del cliente y las de los proxies intermedios si existen
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #envia información sobre si la solicitud es http o https
        proxy_set_header X-Forwarded-Proto $scheme;
        #soporte para websockets y SSE para mantener la conexión abierta
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        #soporte para tiempos de conexión y respuesta lentos
        proxy_connect_timeout 60s; #tiempo máximo de conexión
        proxy_send_timeout 60s; #tiempo máximo para enviar la solicitud
        proxy_read_timeout 60s; #tiempo máximo para recibir la respuesta
    }
} 